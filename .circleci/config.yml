version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/repo
    environment:
      DOCKER_TLS_CERTDIR: "/certs"

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build --no-cache -t backend-app:latest -f deploy/Dockerfile .
      - run:
          name: Push Docker image to registry
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
            docker tag backend-app:latest escolhas/personal-repository:latest
            docker push escolhas/personal-repository:latest

  deploy:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install Argo CD CLI
          command: |
            VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
            curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
            sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
            rm argocd-linux-amd64
      - run:
          name: Login to Argo CD
          command: |
            argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
      - run:
          name: Sync application with Argo CD
          command: |
            argocd app sync backend-app --timeout 600 --prune

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
